pipeline {
    environment {
        isSQLDeploymentSuccess = ''
		isApplicationDeploymentSuccess = ''
    }
    agent any
    tools {
      maven 'maven'
      jdk 'jdk1.8.0'
    }
    stages {
        stage('DatabaseDryRun') {
            steps {
                echo 'Testing the scrips on a temporary database...'
                sh 'mvn -f database/pom.xml liquibase:dropAll -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/testdatabase -Ddb.username=test -Ddb.password=password'
                sh 'mvn -f database/pom.xml liquibase:update -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/testdatabase -Ddb.username=test -Ddb.password=password'
                sh 'mvn -f database/pom.xml liquibase:rollback -Dliquibase.rollbackCount=10000000 -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/testdatabase -Ddb.username=test -Ddb.password=password'
                sh 'mvn -f database/pom.xml liquibase:update -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/testdatabase -Ddb.username=test -Ddb.password=password'
            }
        }
        stage('CreateSQL') {
            steps {
                echo 'Creating update SQL from scripts..'
                sh 'mvn -f database/pom.xml clean liquibase:updateSQL -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/proddatabase -Ddb.username=prod -Ddb.password=password'
                sh 'mkdir build && cp database/target/liquibase/migrate.sql build/update.sql'
            }
        }
        stage('RollbackSQL') {
            steps {
                echo 'Creating rollback SQL from scripts..'
                sh 'mvn -f database/pom.xml clean liquibase:futureRollbackSQL -Ddb.driver=com.mysql.cj.jdbc.Driver -Ddb.url=jdbc:mysql://34.222.234.203:9000/proddatabase -Ddb.username=prod -Ddb.password=password'
                sh 'cp database/target/liquibase/migrate.sql build/rollback.sql'
            }
        }
        stage('ArchiveCreation') {
            steps {
                echo 'Creating a tar.gz....'
                sh 'tar -czvf devops-database-0.0.1.${BUILD_ID}.tar.gz build/'
            }
        }
        stage('SQLArchiveUpload') {
            steps {
                echo 'Deploying tar file to artifactory....'
                //sh 'curl -uadmin:AP3k8uCck9Xxw1GG3i3yz2rq4Kz -T devops-database-0.0.1.${BUILD_ID}.tar.gz "http://34.222.234.203:8081/artifactory/libs-release/xyz/aingaran/dataops/devops-database-0.0.1.${BUILD_ID}.tar.gz"'
            }
        }
        stage('DeploySQL') {
            steps {
                echo 'Deploying....'
                sh 'bash ./database/tools/setup.sh'
                script {
                  isSQLDeploymentSuccess = sh(script: 'python3 database/tools/execute_sql.py 34.222.234.203 9000 prod password proddatabase build/update.sql', returnStdout: true)
                }
                echo 'deployment success? ' 
                echo isSQLDeploymentSuccess
            }
        }
        stage('DeployRollbackSQLDueToSQLFailure') {
            when {
                expression { isSQLDeploymentSuccess == 'Failed' }
            }
            steps{
                echo 'Deploying Rollback....'
                script {
                    try {
                        sh 'python3 database/tools/rollback_sql.py 34.222.234.203 9000 prod password proddatabase build/rollback.sql'
                    } catch(Exception e)    {
                        echo 'rollback completed...'
                    }
                }
            }
        }
        stage('PrintLog')   {
            steps   {
                sh 'cat execution.log ||:'
            }
        }
        stage('DeploymentFailureLogger') {
            when {
                expression { isSQLDeploymentSuccess == 'Failed' || isApplicationDeploymentSuccess == 'Failed'}
            }
            steps {
                echo 'SQL Failed to Deploy. SQL rolled back and application not deployed... '
                sh 'exit 1'
            }
        }
    }
}
